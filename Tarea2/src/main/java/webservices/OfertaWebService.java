
package webservices;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import net.java.dev.jaxb.array.StringArray;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "OfertaWebService", targetNamespace = "http://WebServices/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    net.java.dev.jaxb.array.ObjectFactory.class,
    webservices.ObjectFactory.class
})
public interface OfertaWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/obtenerFechaOfertaStringRequest", output = "http://WebServices/OfertaWebService/obtenerFechaOfertaStringResponse")
    public String obtenerFechaOfertaString(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/obtenerTipoFechaOfertaStringRequest", output = "http://WebServices/OfertaWebService/obtenerTipoFechaOfertaStringResponse")
    public String obtenerTipoFechaOfertaString(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @throws Exception_Exception
     * @throws TipoOfertaExiste_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/altaTipoDeOfertaLaboralRequest", output = "http://WebServices/OfertaWebService/altaTipoDeOfertaLaboralResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServices/OfertaWebService/altaTipoDeOfertaLaboral/Fault/Exception"),
        @FaultAction(className = TipoOfertaExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaTipoDeOfertaLaboral/Fault/TipoOfertaExiste")
    })
    public void altaTipoDeOfertaLaboral(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        float arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws Exception_Exception, TipoOfertaExiste_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.StringSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/listarKeyWordRequest", output = "http://WebServices/OfertaWebService/listarKeyWordResponse")
    public StringSetWrapper listarKeyWord();

    /**
     * 
     * @return
     *     returns webservices.StringSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/listarTipoOfertaRequest", output = "http://WebServices/OfertaWebService/listarTipoOfertaResponse")
    public StringSetWrapper listarTipoOferta();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @throws Exception_Exception
     * @throws OfertaNoExiste_Exception
     * @throws OfertaNoValidaParaEsaFecha_Exception
     * @throws PostulacionYaExiste_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/altaPostulacionRequest", output = "http://WebServices/OfertaWebService/altaPostulacionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServices/OfertaWebService/altaPostulacion/Fault/Exception"),
        @FaultAction(className = PostulacionYaExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaPostulacion/Fault/PostulacionYaExiste"),
        @FaultAction(className = OfertaNoExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaPostulacion/Fault/OfertaNoExiste"),
        @FaultAction(className = OfertaNoValidaParaEsaFecha_Exception.class, value = "http://WebServices/OfertaWebService/altaPostulacion/Fault/OfertaNoValidaParaEsaFecha")
    })
    public void altaPostulacion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4)
        throws Exception_Exception, OfertaNoExiste_Exception, OfertaNoValidaParaEsaFecha_Exception, PostulacionYaExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtOferta
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/seleccionarOfertaRequest", output = "http://WebServices/OfertaWebService/seleccionarOfertaResponse")
    public DtOferta seleccionarOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.StringSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getPostulantesRequest", output = "http://WebServices/OfertaWebService/getPostulantesResponse")
    public StringSetWrapper getPostulantes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasRequest", output = "http://WebServices/OfertaWebService/getOfertasResponse")
    public DtOfertaListWrapper getOfertas();

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/agregarImagenRequest", output = "http://WebServices/OfertaWebService/agregarImagenResponse")
    public void agregarImagen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        byte[] arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtTipoOferta
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/informacionTipoOfertaRequest", output = "http://WebServices/OfertaWebService/informacionTipoOfertaResponse")
    public DtTipoOferta informacionTipoOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/comprarOfertaConPaqueteRequest", output = "http://WebServices/OfertaWebService/comprarOfertaConPaqueteResponse")
    public void comprarOfertaConPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasRechazadasRequest", output = "http://WebServices/OfertaWebService/getOfertasRechazadasResponse")
    public DtOfertaListWrapper getOfertasRechazadas();

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasIngresadasRequest", output = "http://WebServices/OfertaWebService/getOfertasIngresadasResponse")
    public DtOfertaListWrapper getOfertasIngresadas();

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasVencidasConfirmadasRequest", output = "http://WebServices/OfertaWebService/getOfertasVencidasConfirmadasResponse")
    public DtOfertaListWrapper getOfertasVencidasConfirmadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/obtenerNombrePaqueteOfertaRequest", output = "http://WebServices/OfertaWebService/obtenerNombrePaqueteOfertaResponse")
    public String obtenerNombrePaqueteOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasFinalisadasRequest", output = "http://WebServices/OfertaWebService/getOfertasFinalisadasResponse")
    public DtOfertaListWrapper getOfertasFinalisadas();

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getImagenRequest", output = "http://WebServices/OfertaWebService/getImagenResponse")
    public byte[] getImagen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns webservices.DtTipoOfertaSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getTipoOfertasRequest", output = "http://WebServices/OfertaWebService/getTipoOfertasResponse")
    public DtTipoOfertaSetWrapper getTipoOfertas();

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.StringSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getnickPostulantesRequest", output = "http://WebServices/OfertaWebService/getnickPostulantesResponse")
    public StringSetWrapper getnickPostulantes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/finalizarOfertaRequest", output = "http://WebServices/OfertaWebService/finalizarOfertaResponse")
    public void finalizarOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/aceptarOfertaRequest", output = "http://WebServices/OfertaWebService/aceptarOfertaResponse")
    public void aceptarOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws EmpresaNoExiste_Exception
     * @throws Exception_Exception
     * @throws OfertaYaExiste_Exception
     * @throws TipoOfertaNoExiste_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/altaOfertaLaboralRequest", output = "http://WebServices/OfertaWebService/altaOfertaLaboralResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServices/OfertaWebService/altaOfertaLaboral/Fault/Exception"),
        @FaultAction(className = TipoOfertaNoExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaOfertaLaboral/Fault/TipoOfertaNoExiste"),
        @FaultAction(className = OfertaYaExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaOfertaLaboral/Fault/OfertaYaExiste"),
        @FaultAction(className = EmpresaNoExiste_Exception.class, value = "http://WebServices/OfertaWebService/altaOfertaLaboral/Fault/EmpresaNoExiste")
    })
    public void altaOfertaLaboral(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        float arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        StringArray arg9)
        throws EmpresaNoExiste_Exception, Exception_Exception, OfertaYaExiste_Exception, TipoOfertaNoExiste_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getAllofertasRequest", output = "http://WebServices/OfertaWebService/getAllofertasResponse")
    public DtOfertaListWrapper getAllofertas();

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasKewordRequest", output = "http://WebServices/OfertaWebService/getOfertasKewordResponse")
    public DtOfertaListWrapper getOfertasKeword(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns webservices.DtOfertaListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getOfertasValidasRequest", output = "http://WebServices/OfertaWebService/getOfertasValidasResponse")
    public DtOfertaListWrapper getOfertasValidas();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/rechazarOfertaRequest", output = "http://WebServices/OfertaWebService/rechazarOfertaResponse")
    public void rechazarOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/altaKeyWordRequest", output = "http://WebServices/OfertaWebService/altaKeyWordResponse")
    public void altaKeyWord(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtPostulacionListWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getPostulacionesRequest", output = "http://WebServices/OfertaWebService/getPostulacionesResponse")
    public DtPostulacionListWrapper getPostulaciones(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getEmpresaRequest", output = "http://WebServices/OfertaWebService/getEmpresaResponse")
    public String getEmpresa(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/OfertaWebService/getCantFavsRequest", output = "http://WebServices/OfertaWebService/getCantFavsResponse")
    public int getCantFavs(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/agregarOrdenRequest", output = "http://WebServices/OfertaWebService/agregarOrdenResponse")
    public void agregarOrden(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        StringArray arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @throws VideoNoValido_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/OfertaWebService/agregarVideoRequest", output = "http://WebServices/OfertaWebService/agregarVideoResponse", fault = {
        @FaultAction(className = VideoNoValido_Exception.class, value = "http://WebServices/OfertaWebService/agregarVideo/Fault/VideoNoValido")
    })
    public void agregarVideo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws VideoNoValido_Exception
    ;

}
