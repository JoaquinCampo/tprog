
package webservices;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PaqueteWebService", targetNamespace = "http://WebServices/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PaqueteWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/PaqueteWebService/obtenerFechaPaqueteStringRequest", output = "http://WebServices/PaqueteWebService/obtenerFechaPaqueteStringResponse")
    public String obtenerFechaPaqueteString(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.StringSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/PaqueteWebService/getNombresTipoOfertaRequest", output = "http://WebServices/PaqueteWebService/getNombresTipoOfertaResponse")
    public StringSetWrapper getNombresTipoOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @throws TipoOfertaNoExiste_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/PaqueteWebService/agregarTipoDeOfertaAPaqueteRequest", output = "http://WebServices/PaqueteWebService/agregarTipoDeOfertaAPaqueteResponse", fault = {
        @FaultAction(className = TipoOfertaNoExiste_Exception.class, value = "http://WebServices/PaqueteWebService/agregarTipoDeOfertaAPaquete/Fault/TipoOfertaNoExiste")
    })
    public void agregarTipoDeOfertaAPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2)
        throws TipoOfertaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @throws Exception_Exception
     * @throws PaqueteYaExiste_Exception
     */
    @WebMethod
    @Action(input = "http://WebServices/PaqueteWebService/crearPaqueteRequest", output = "http://WebServices/PaqueteWebService/crearPaqueteResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://WebServices/PaqueteWebService/crearPaquete/Fault/Exception"),
        @FaultAction(className = PaqueteYaExiste_Exception.class, value = "http://WebServices/PaqueteWebService/crearPaquete/Fault/PaqueteYaExiste")
    })
    public void crearPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        float arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4)
        throws Exception_Exception, PaqueteYaExiste_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.DtPaqueteSetWrapper
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/PaqueteWebService/listarPaqueteRequest", output = "http://WebServices/PaqueteWebService/listarPaqueteResponse")
    public DtPaqueteSetWrapper listarPaquete();

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://WebServices/PaqueteWebService/agregarImagenRequest", output = "http://WebServices/PaqueteWebService/agregarImagenResponse")
    public void agregarImagen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        byte[] arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/PaqueteWebService/getImagenRequest", output = "http://WebServices/PaqueteWebService/getImagenResponse")
    public byte[] getImagen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://WebServices/PaqueteWebService/getDTPaqueteRequest", output = "http://WebServices/PaqueteWebService/getDTPaqueteResponse")
    public DtPaquete getDTPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}
